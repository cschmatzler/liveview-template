name: "Grafana Provisioning: Apply"
on:
  push:
    branches:
      - master
    paths:
      - "k8s/workloads/monitoring/grafana/provision/**/*.tf"
jobs:
  apply:
    name: Apply
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: k8s/workloads/monitoring/grafana/provision/
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
      - name: Install Terraform
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2
      - name: Log into 1Password
        uses: 1password/load-secrets-action/configure@v1
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      - name: Fetch secrets from 1Password
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          # Tailscale
          TAILSCALE_AUTHKEY: op://liveview-template/github-actions/TAILSCALE_AUTHKEY
          # Terraform state
          AWS_ACCESS_KEY_ID: op://liveview-template/terraform/AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: op://liveview-template/terraform/AWS_SECRET_ACCESS_KEY
          # Grafana
          TF_VAR_admin_auth: op://liveview-template/grafana/GF_ADMIN_AUTH
          # TODO: this fails for when we're having multiple users
          # create specific vault with shareable items?
          TF_VAR_user_christoph_password: op://liveview-template/grafana/password
      - name: Log into Tailscale
        uses: tailscale/github-action@v1
        with:
          version: 1.40.1
          authkey: ${{ env.TAILSCALE_AUTHKEY }}
      - name: Apply
        id: apply
        run: terraform apply -auto-approve -no-color
