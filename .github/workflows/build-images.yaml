name: "Action: Image Build"

on:
  workflow_call:
    inputs:
      images:
        type: string

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: inputs.images != ''
    strategy:
      matrix:
        image: ["${{ fromJson(inputs.images) }}"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - name: Setup vars
        id: vars
        shell: bash
        run: |-
          version=$(jq -r '.version' ./kubernetes/images/${{ matrix.image }}/metadata.json) && \
            echo "version=${version}" >> $GITHUB_OUTPUT
          build_args=$(jq -r '.args | to_entries[] | "\(.key)=\(.value)"' ./kubernetes/images/${{ matrix.image }}/metadata.json) && \
            echo "build_args=${build_args}" >> $GITHUB_OUTPUT

      - name: Log into GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./kubernetes/images/${{ matrix.image }}/Dockerfile
          build-args: |
            ${{ steps.vars.outputs.build_args }}
          platforms: linux/arm64
          tags: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}:${{ steps.vars.outputs.version }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
