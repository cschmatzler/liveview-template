name: "Kubernetes: Rebuild images"

on:
  push:
    branches:
      - master
    paths:
      - "k8s/images/**"

jobs:
  collect-changes:
    name: Collect changes
    runs-on: ubuntu-latest
    outputs:
      addedOrModifiedImages: ${{ steps.collect-images.outputs.addedOrModifiedImages }}
    steps:
      - name: Checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3

      - name: Collect changed files
        uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: json
          filters: |
            addedOrModified:
              - added|modified: 'k8s/images/**'

      - name: Collect changed images
        id: collect-images
        if: |
          steps.filter.outputs.addedOrModified == 'true'
        shell: bash
        run: |
          PATHS='${{ steps.filter.outputs.addedOrModified_files }}'
          OUTPUT=$(echo $PATHS | jq --raw-output -c 'map(. |= split("/")[2]) | unique')
          echo "addedOrModifiedImages=${OUTPUT}" >> $GITHUB_OUTPUT

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - collect-changes
    if: ${{ needs.collect-changes.outputs.addedOrModifiedImages }} != ''
    strategy:
      matrix:
        image: ["${{ fromJson(needs.collect-changes.outputs.addedOrModifiedImages) }}"]
      fail-fast: false
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3

      - name: Setup vars
        id: vars
        shell: bash
        run: |-
          version=$(jq -r '.version' ./k8s/images/${{ matrix.image }}/metadata.json) && \
            echo "version=${version}" >> $GITHUB_OUTPUT
          build_args=$(jq -r '.args | to_entries[] | "\(.key)=\(.value)"' ./k8s/images/${{ matrix.image }}/metadata.json) && \
            echo "build_args=${build_args}" >> $GITHUB_OUTPUT

      - name: Log into GHCR
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2

      - name: Build and push image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4
        with:
          context: .
          file: ./k8s/images/${{ matrix.image }}/Dockerfile
          build-args: |
            ${{ steps.vars.outputs.build_args }}
          platforms: linux/arm64
          tags: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}:${{ steps.vars.outputs.version }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
