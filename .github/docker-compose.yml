---
version: "3.9"
services:
  test:
    image: "${IMAGE_OWNER}/${IMAGE_NAME}:test${IMAGE_VER}"
    build:
      dockerfile: ${DOCKERFILE:-Dockerfile}
      target: test-image
      args:
        BUILDKIT_INLINE_CACHE: "1"
      context: .
    environment:
      - DATABASE_DB
      - DATABASE_HOST=${DATABASE_HOST:-postgres}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE:-xVyLzQNJAvDcfSHnRMLfkU8V3WEX79B18qvba+h/jIxqawRBM4wQw2qkYdfjCrtA}
    volumes:
      - "./.cache:/var/cache"
    depends_on:
      postgres:
        condition: service_healthy

  grype:
    image: "anchore/grype"
    volumes:
      - "./.cache:/var/cache"
      - "/var/run/docker.sock:/var/run/docker.sock"

  postgres:
    image: "postgres:15-alpine"
    ports:
      - '5432'
    user: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready"]
      start_period: 2s
      interval: 1s
      timeout: 1s
      retries: 10

volumes:
  postgres_data:
    driver: local
