version: "3"
tasks:
  init:
    desc: Initialize Terraform
    dir: "{{.INFRA_DIR}}"
    cmds:
      - terraform init {{.CLI_ARGS}}

  plan:
    desc: Show the changes Terraform will make
    dir: "{{.INFRA_DIR}}"
    cmds:
      - terraform plan {{.CLI_ARGS}}

  apply:
    desc: Apply the changes
    dir: "{{.INFRA_DIR}}"
    cmds:
      - terraform apply {{.CLI_ARGS}}


  # TODO: rename this and integrate it into init
  init-talos:
    desc: Generate secret and configuration files
    cmds:
      - talosctl gen secrets -o {{.TALOS_DIR}}/secrets.yaml
      - talosctl gen config --with-secrets {{.TALOS_DIR}}/secrets.yaml --config-patch-control-plane @{{.TALOS_DIR}}/cni.yaml --with-examples=false --with-docs=false -o {{.TALOS_DIR}} liveview-template https://cluster.$DOMAIN:6443
    preconditions:
      - sh: "! test -f infra/secrets.yaml"
        msg: |
          Configuration already exists.

  set-talosconfig:
    desc: Adds the currently existing nodes as talosconfig nodes
    dir: "{{.INFRA_DIR}}"
    cmds:
      - talosctl --talosconfig ./talos/talosconfig config endpoint cluster.liveview-template.app
      - talosctl --talosconfig ./talos/talosconfig config nodes $(terraform output -json | jq -r '.control_plane_ip_addresses.value | join(" ")')

  bootstrap-talos:
    desc: Bootstraps the Talos cluster
    dir: "{{.INFRA_DIR}}"
    cmds:
      - talosctl --talosconfig ./talos/talosconfig bootstrap -e $(terraform output -json | jq -r '.control_plane_ip_addresses.value[0]') -n $(terraform output -json | jq -r '.control_plane_ip_addresses.value[0]')
