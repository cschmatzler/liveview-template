global:
  imagePullSecrets:
    - name: dockerconfigjson-github

extraInitContainers:
  - name: init-db
    image: ghcr.io/cschmatzler/postgresql-initdb:15.2
    imagePullPolicy: Always
    envFrom:
      - secretRef:
          name: grafana-op

replicas: 3

persistence:
  enabled: false
testFramework:
  enabled: false

env:
  GF_ANALYTICS_CHECK_FOR_UPDATES: false
  GF_DATABASE_TYPE: postgres
  GF_DATABASE_SSL_MODE: verify-full
  GF_DATABASE_CA_CERT_PATH: /certs/ca.liveview-template.app-bundle.pem
envFromSecrets:
  - name: grafana-op
extraConfigmapMounts:
  - name: ca-bundle
    configMap: ca.liveview-template.app-bundle
    mountPath: /certs
    readOnly: true

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: infra
        orgId: 1
        folder: Infra
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
datasources:
  datasources.yaml:
    apiVersion: 1
    deleteDatasources:
      - name: Loki
        orgId: 1
      - name: Alertmanager
        orgId: 1
    datasources:
      - name: Prometheus
        type: prometheus
        prometheusType: Mimir
        implementation: mimir
        access: proxy
        isDefault: true
        url: http://mimir-query-frontend.monitoring.svc.cluster.local:8080/prometheus
        jsonData:
          httpHeaderName1: "X-Scope-OrgID"
        secureJsonData:
          httpHeaderValue1: "liveview-template.app"
      - name: Loki
        type: loki
        access: proxy
        url: http://loki-gateway.monitoring.svc.cluster.local
        jsonData:
          maxLines: 250
          httpHeaderName1: "X-Scope-OrgID"
        secureJsonData:
          httpHeaderValue1: "liveview-template.app"
      - name: Tempo
        type: tempo
        access: proxy
        url: http://tempo-query-frontend.monitoring.svc.cluster.local:3100
        jsonData:
          httpHeaderName1: "X-Scope-OrgID"
        secureJsonData:
          httpHeaderValue1: "liveview-template.app"

dashboards:
  infra:
    node-exporter:
      name: Node Exporter
      gnetId: 1860
      revision: 31
      datasource:
        - name: DS_PROMETHEUS
          value: Prometheus
    kube-state-metrics:
      gnetId: 13332
      revision: 12
      datasource: Prometheus
    cert-manager:
      gnetId: 11001
      revision: 1
      datasource: Prometheus
    cloudnative-pg:
      url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
      datasource: Prometheus

ingress:
  enabled: true
  ingressClassName: private
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    external-dns.alpha.kubernetes.io/target: liveview-template-app.manticore-hippocampus.ts.net
    ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - &host grafana.liveview-template.app
  tls:
    - secretName: grafana-tls
      hosts:
        - *host

admin:
  # These are only applied by Grafana during initial bootstrap - changing them in the
  # secret will not update an existing database.
  existingSecret: grafana-op
  userKey: GRAFANA_USERNAME
  passwordKey: GRAFANA_PASSWORD
