logging {
  level  = "debug"
  format = "logfmt"
}

// Discovery
// ---------
discovery.kubernetes "endpoints" {
  role = "endpoints"
}

discovery.relabel "common" {
  targets = discovery.kubernetes.endpoints.targets

  rule {
    source_labels = ["__meta_kubernetes_namespace"]
    action = "replace"
    target_label = "namespace"
  }
  rule {
    source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
    separator = "/"
    action = "replace"
    target_label = "job"
  }
  rule {
    source_labels = ["__meta_kubernetes_pod_name"]
    action = "replace"
    target_label = "pod"
  }
  rule {
    source_labels = ["__meta_kubernetes_pod_node_name"]
    action = "replace"
    target_label = "instance"
  }
  rule {
    source_labels = ["__meta_kubernetes_pod_container_name"]
    action = "replace"
    target_label = "container"
  }
  rule {
    source_labels = [
      "__meta_kubernetes_pod_label_app_kubernetes_io_name",
      "__meta_kubernetes_pod_label_app",
      "__meta_kubernetes_pod_label_k8s_app",
    ]
    action = "replace"
    target_label = "app"
    regex = ";*([^;]+);*.*"
  }
}

// Metrics
// -------
discovery.relabel "kubernetes_metrics" {
  targets = discovery.relabel.common.output

  rule {
    source_labels = [
      "__meta_kubernetes_endpoints_labelpresent_grafana_agent_collect_metrics",
    ]
    action = "keep"
    regex = "true"
  }
}

prometheus.scrape "metrics" {
  targets = discovery.relabel.kubernetes_metrics.output

  scrape_interval = "15s"

  forward_to = [prometheus.remote_write.local.receiver]
}

prometheus.remote_write "local" {
  endpoint {
    url = "http://mimir-distributor.monitoring.svc.cluster.local:8080/api/v1/push"
    headers = {
      "X-Scope-OrgID" = "liveview-template.app",
    }
  }
  external_labels = {
    cluster = "liveview-template.app",
    exporter = "grafana-agent",
  }
}
